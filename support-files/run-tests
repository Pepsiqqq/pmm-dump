#!/bin/bash

# This script runs go tests.

set -o errexit

timeout="15m"
build_tag="$1"

trap exit 1 SIGINT

go clean -testcache

run_e2e_tests() {
	go test -timeout "$timeout" -tags e2e ./internal/test/e2e/... -v 
}

run_unit_tests() {
	go test -timeout "$timeout" ./... -v \
		| grep -v '\[no test files\]' # Filtering lines like `? pmm-dump/pkg/victoriametrics [no test files]`
}

if [[ -n $build_tag ]]; then
	export TestVersion="2"
	export PerconaServerUrl="percona/pmm-server"
	export PerconaClientUrl="percona/pmm-client"

	./support-files/destroy-test-resources
	rm -f test/.env.test 
	rm -f test/.env2.test
	rm -f test/testlogV2.txt
	rm -f test/testlogV3.txt

	./setup/test/init-test-configs.sh test
	run_e2e_tests | tee test/testlogV2.txt

	export TestVersion="3"
	export PerconaServerUrl="perconalab/pmm-server"
	export PerconaClientUrl="perconalab/pmm-client"
	
	rm -f test/.env.test 
	rm -f test/.env2.test
	./support-files/destroy-test-resources

	./setup/test/init-test-configs.sh test
	run_e2e_tests | tee test/testlogV3.txt

	echo "Test result of version 2. For more details go to test/testlogV2.txt:"
	echo "$(tail -n 5 test/testlogV2.txt)"
	echo "Test result of version 3. For more details go to test/testlogV3.txt:"
	echo "$(tail -n 5 test/testlogV3.txt)"

else
	run_unit_tests
fi
